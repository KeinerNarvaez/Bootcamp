async function obtenerCartasDesdeAPI() {
  try {
    const respuesta = await fetch("http://localhost:8080/Card/");
    if (!respuesta.ok) throw new Error("Error al obtener cartas");
    const cartas = await respuesta.json();
    return cartas;
  } catch (error) {
    console.error("Error:", error);
    return []; // devolver array vacÃ­o si falla
  }
}

function repartirCartas(cartas, jugadores) {
  const cartasBarajadas = cartas.sort(() => Math.random() - 0.5);
  const mazos = Array.from({ length: jugadores }, () => []);

  let index = 0;
  while (index < cartasBarajadas.length) {
    for (let i = 0; i < jugadores && index < cartasBarajadas.length; i++) {
      mazos[i].push(cartasBarajadas[index]);
      index++;
    }
  }

  return mazos;
}

let mazosJugadores = [];

window.addEventListener("DOMContentLoaded", async () => {
  const todasLasCartas = await obtenerCartasDesdeAPI();
  const jugadores = JSON.parse(localStorage.getItem("jugadores")) || [];

  // Comprobamos que haya suficientes cartas para todos
  if (todasLasCartas.length < jugadores.length * 8) {
    alert("No hay suficientes cartas para jugar.");
    return;
  }

  // Repartir las cartas
  mazosJugadores = repartirCartas(todasLasCartas, jugadores.length);

  iniciarJuego(mazosJugadores); // o iniciarRonda con el nuevo sistema
});


// const cartas = mazosJugadores[turnoActual];



